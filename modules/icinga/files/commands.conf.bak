/* Command objects */

object NotificationCommand "mail-host-notification" {
  import "plugin-notification-command"

  command = [ SysconfDir + "/icinga2/scripts/mail-host-notification.sh" ]

  env = {
    NOTIFICATIONTYPE = "$notification.type$"
    HOSTALIAS = "$host.display_name$"
    HOSTADDRESS = "$address$"
    HOSTSTATE = "$host.state$"
    LONGDATETIME = "$icinga.long_date_time$"
    HOSTOUTPUT = "$host.output$"
    NOTIFICATIONAUTHORNAME = "$notification.author$"
    NOTIFICATIONCOMMENT = "$notification.comment$"
    HOSTDISPLAYNAME = "$host.display_name$"
    USEREMAIL = "$user.email$"
  }
}

object NotificationCommand "mail-service-notification" {
  import "plugin-notification-command"

  command = [ SysconfDir + "/icinga2/scripts/mail-service-notification.sh" ]

  env = {
    NOTIFICATIONTYPE = "$notification.type$"
    SERVICEDESC = "$service.name$"
    HOSTALIAS = "$host.display_name$"
    HOSTADDRESS = "$address$"
    SERVICESTATE = "$service.state$"
    LONGDATETIME = "$icinga.long_date_time$"
    SERVICEOUTPUT = "$service.output$"
    NOTIFICATIONAUTHORNAME = "$notification.author$"
    NOTIFICATIONCOMMENT = "$notification.comment$"
    HOSTDISPLAYNAME = "$host.display_name$"
    SERVICEDISPLAYNAME = "$service.display_name$"
    USEREMAIL = "$user.email$"
  }
}

 object CheckCommand "READING-UPLOADBACKUP" {
  import "plugin-check-command"
  command = [ PluginDir + "/rdg_check_cmx_backup.sh" ] //constants.conf -> const PluginDir
 }

 object CheckCommand "READING-NOTIFICATION" {
 import "plugin-check-command"
  command = [ PluginDir + "/rdg_check_cmx_not.sh" ] //constants.conf -> const PluginDir
 }
 object CheckCommand "READING-SEARCH" {
 import "plugin-check-command"
  command = [ PluginDir + "/rdg_check_cmx_search.sh" ] //constants.conf -> const PluginDir
 }
 object CheckCommand "READING-UPLOADSYNC" {
 import "plugin-check-command"
  command = [ PluginDir + "/rdg_check_cmx_upload.sh" ] //constants.conf -> const PluginDir
 }

 object CheckCommand "SACRAMENTO-UPLOADBACKUP" {
 import "plugin-check-command"
  command = [ PluginDir + "/check_cmx_backup.sh" ] //constants.conf -> const PluginDir
  timeout = 60000
 }
 object CheckCommand "SACRAMENTO-NOTIFICATION" {
 import "plugin-check-command"
  command = [ PluginDir + "/check_cmx_not.sh" ] //constants.conf -> const PluginDir
 }
 object CheckCommand "SACRAMENTO-SEARCH" {
 import "plugin-check-command"
  command = [ PluginDir + "/check_cmx_search.sh" ] //constants.conf -> const PluginDir
 }

  object CheckCommand "SACRAMENTO-UPLOADSYNC" {
  import "plugin-check-command"
  command = [ PluginDir + "/check_cmx_upload.sh" ] //constants.conf -> const PluginDir
 }


 object CheckCommand "check_curl.sh" {
 import "plugin-check-command"
  command = [ PluginDir + "/check_curl.sh", "$ARG$"] //constants.conf -> const PluginDir
 }

  object CheckCommand "SACRAMENTO-SSL" {
 import "plugin-check-command"
  command = [ PluginDir + "/check_sac_ssl" ] //constants.conf -> const PluginDir
 }
 
  object CheckCommand "READING-SSL" {
 import "plugin-check-command"
  command = [ PluginDir + "/check_rdg_ssl" ] //constants.conf -> const PluginDir
 }

